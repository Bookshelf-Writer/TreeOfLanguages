name: Test and Build

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.json'
      - '**.sh'
      - '**.txt'

jobs:

#**********************************************************************************************************************#
  test-module:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ['3.10']
    permissions:
      contents: write


    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

#######################################################################################################################

      - name: Cache [ubuntu] init
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.python-version }}-local
          restore-keys: |
            ${{ runner.os }}-py-${{ matrix.python-version }}-
            ${{ runner.os }}-py-

      - name: Cache [macos] init
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.python-version }}-local
          restore-keys: |
            ${{ runner.os }}-py-${{ matrix.python-version }}-
            ${{ runner.os }}-py-
          enableCrossOsArchive: true

      - name: Cache [windows] init
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py-${{ matrix.python-version }}-local
          restore-keys: |
            ${{ runner.os }}-py-${{ matrix.python-version }}-
            ${{ runner.os }}-py-
          enableCrossOsArchive: true

########################################################################################################################

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install argparse
          pip install colorama
          pip install pyinstaller


      - name: ⊡ Empy start
        run: python script.py


      - name: ⊡ [check] file
        run: python script.py --check --file ''

      - name: ⊡ [check] dir
        run: python script.py --check --dir ''


      - name: ⊡ [compiling](tree) file
        run: python script.py --compiling --tree --file ''

      - name: ⊡ [compiling](tree) dir
        run: python script.py --compiling --tree --dir ''

      - name: ⊡ [compiling](routs) file
        run: python script.py --compiling --routs --file ''

      - name: ⊡ [compiling](routs) dir
        run: python script.py --compiling --routs --dir ''


      - name: ⊡ [clone] file
        run: python script.py --clone --file '' --pattern ''

      - name: ⊡ [clone] dir
        run: python script.py --clone --dir '' --pattern ''

      - name: ⊡ [compare] file
        run: python script.py --compare --file '' --pattern ''

      - name: ⊡ [compare] dir
        run: python script.py --compare --dir '' --pattern ''


      - name: ⊡ [iso]
        run: python script.py --iso

      - name: ⊡ [iso](codeOnly)
        run: python script.py --codeOnly --iso

      - name: ⊡ [iso] fileJSON
        run: python script.py --iso --fileJSON ''

      - name: ⊡ [iso] code
        run: python script.py --iso --code ''

      - name: ⊡ [iso](codeOnly) code
        run: python script.py --iso --codeOnly --code ''

      - name: ⊡ [iso] name
        run: python script.py --iso --name ''

      - name: ⊡ [iso](codeOnly) name
        run: python script.py --iso --codeOnly --name ''
